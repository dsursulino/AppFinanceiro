{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState } from 'react';\nimport Etapa01 from './Etapa01';\nimport Etapa02 from './Etapa02';\nimport { Container } from './style';\nimport EtapaContext from './etapaContext';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport Etapa03 from './Etapa03';\nimport Etapa04 from './Etapa04';\nimport Etapa05 from './Etapa05';\nimport Etapa06 from './Etapa06';\nimport Etapa07 from './Etapa07';\nimport Etapa08 from './Etapa08';\nimport { ContentEtapas } from '../../../components/Etapas/contentEtapas';\nimport img_etapa_01 from '../../../assets/solicitacaoCredito/etapa1.png';\nimport img_etapa_02 from '../../../assets/solicitacaoCredito/email.png';\nimport img_etapa_03 from '../../../assets/solicitacaoCredito/etapa3.png';\nimport { FichaService } from '../../../services/fichaService';\nimport { uid } from 'rand-token';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ffffff'\n    },\n    secondary: {\n      main: '#E92A2A'\n    },\n    error: {\n      light: '#e5a0a0',\n      main: '#CD5C5C',\n      dark: '#992c2c'\n    },\n    text: {\n      primary: '#ffffff',\n      secondary: '#ffffff',\n      hint: '#ffffff'\n    }\n  },\n  overrides: {\n    MuiInput: {\n      underline: {\n        borderColor: \"white\",\n        //background color of whole input\n        '&:hover:not($disabled):after': {\n          borderColor: 'orange' //its when its hover and input is focused\n\n        },\n        '&:hover:not($disabled):before': {\n          borderColor: 'yellow' //its when you hover and input is not foucused\n\n        },\n        '&:after': {\n          borderColor: 'blue' //when input is focused, Its just for example. Its better to set this one using primary color\n\n        },\n        '&:before': {\n          borderColor: 'white!important' // when input is not touched\n\n        }\n      }\n    }\n  }\n});\n\nconst Etapas = () => {\n  const _contexto = useContext(EtapaContext);\n\n  const {\n    0: _ficha,\n    1: setFicha\n  } = useState(_contexto.value);\n\n  const atualizar = function (value) {\n    const newValue = Object.assign({}, value);\n    newValue.token = uid(12).toString();\n    FichaService.Criar(newValue).then(data => {\n      console.log(data);\n      setFicha(data);\n    });\n  };\n\n  const getEtapa = function (index) {\n    if (index == 1) return __jsx(Etapa01, null);\n    if (index == 2) return __jsx(Etapa02, null);\n    if (index == 3) return __jsx(Etapa03, null);\n    if (index == 4) return __jsx(Etapa04, null);\n    if (index == 5) return __jsx(Etapa05, null);\n    if (index == 6) return __jsx(Etapa06, null);\n    if (index == 7) return __jsx(Etapa07, null);\n    if (index == 8) return __jsx(Etapa08, null);\n  };\n\n  const getImagem = function (index) {\n    if (index == 1) return img_etapa_01;\n    if (index == 2) return img_etapa_02;\n    if (index == 3) return img_etapa_03;\n    if (index == 4) return img_etapa_03;\n    if (index == 5) return img_etapa_03;\n    if (index == 6) return img_etapa_03;\n    if (index == 7) return img_etapa_03;\n    if (index == 8) return img_etapa_03;\n  };\n\n  return __jsx(MuiThemeProvider, {\n    theme: theme\n  }, __jsx(EtapaContext.Provider, {\n    value: {\n      value: _ficha,\n      Atualizar: atualizar\n    }\n  }, __jsx(Container, {\n    id: \"etapas\"\n  }, __jsx(EtapaContext.Consumer, null, context => __jsx(ContentEtapas, {\n    imagem: getImagem(context.value.etapa)\n  }, getEtapa(context.value.etapa))))));\n};\n\nexport default Etapas;","map":null,"metadata":{},"sourceType":"module"}