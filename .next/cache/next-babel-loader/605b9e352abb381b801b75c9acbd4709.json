{"ast":null,"code":"// import all interfaces\nimport { BaseRepository } from './base/baseRepository'; // that class only can be extended\n\nexport class FichaREP extends BaseRepository {\n  constructor(dbClient) {\n    super();\n  }\n\n  create(item) {\n    return this.dbClient.ficha.create({\n      data: item\n    });\n  }\n\n  update(item) {\n    return this.dbClient.ficha.update({\n      where: {\n        id: item.id\n      },\n      data: item\n    });\n  }\n\n  delete(id) {\n    throw new Error('Method not implemented.');\n  }\n\n  find(item) {\n    throw new Error('Method not implemented.');\n  }\n\n  findOne(id) {\n    throw new Error('Method not implemented.');\n  }\n\n}","map":{"version":3,"sources":["D:/Projetos/TMB/front/solicitacao_credito/src/repositories/fichaREP.ts"],"names":["BaseRepository","FichaREP","constructor","dbClient","create","item","ficha","data","update","where","id","delete","Error","find","findOne"],"mappings":"AAAA;AAIA,SAASA,cAAT,QAA+B,uBAA/B,C,CACA;;AACA,OAAQ,MAAMC,QAAN,SAAuBD,cAAvB,CAA6E;AAEnFE,EAAAA,WAAW,CAACC,QAAD,EAAyB;AAClC;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAA4B;AAChC,WAAO,KAAKF,QAAL,CAAcG,KAAd,CAAoBF,MAApB,CAA2B;AAChCG,MAAAA,IAAI,EAAEF;AAD0B,KAA3B,CAAP;AAGD;;AACDG,EAAAA,MAAM,CAAEH,IAAF,EAA6B;AACjC,WAAO,KAAKF,QAAL,CAAcG,KAAd,CAAoBE,MAApB,CAA2B;AAChCC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEL,IAAI,CAACK;AAAX,OADyB;AAEhCH,MAAAA,IAAI,EAAEF;AAF0B,KAA3B,CAAP;AAID;;AACDM,EAAAA,MAAM,CAACD,EAAD,EAA+B;AACnC,UAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACDC,EAAAA,IAAI,CAACR,IAAD,EAAgC;AAClC,UAAM,IAAIO,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACDE,EAAAA,OAAO,CAACJ,EAAD,EAA6B;AAClC,UAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAzBkF","sourcesContent":["// import all interfaces\nimport { IWrite } from './interfaces/IWrite';\nimport { IRead } from './interfaces/IRead';\nimport { Ficha, PrismaClient } from '@prisma/client';\nimport { BaseRepository } from './base/baseRepository';\n// that class only can be extended\nexport  class FichaREP extends BaseRepository implements IWrite<Ficha>, IRead<Ficha> {\n\n  constructor(dbClient: PrismaClient) {\n    super();\n  }\n\n  create(item: Ficha): Promise<any> {\n    return this.dbClient.ficha.create({\n      data: item\n    });\n  }\n  update( item: Ficha): Promise<any> {\n    return this.dbClient.ficha.update({\n      where: { id: item.id },\n      data: item\n    });\n  }\n  delete(id: string): Promise<boolean> {\n    throw new Error('Method not implemented.');\n  }\n  find(item: Ficha): Promise<Ficha[]> {\n    throw new Error('Method not implemented.');\n  }\n  findOne(id: string): Promise<Ficha> {\n    throw new Error('Method not implemented.');\n  }\n\n}"]},"metadata":{},"sourceType":"module"}