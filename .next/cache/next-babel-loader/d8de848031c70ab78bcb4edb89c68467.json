{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useContext, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Send from '@material-ui/icons/Send';\nimport { useForm } from \"react-hook-form\";\nimport MaskedInput from 'react-text-mask';\nimport { Container } from './style';\nimport EtapaContext from '../etapaContext';\nimport TextField from '@material-ui/core/TextField/TextField';\n\nfunction CelularMaskCustom(props) {\n  const {\n    inputRef\n  } = props,\n        other = _objectWithoutProperties(props, [\"inputRef\"]);\n\n  return __jsx(MaskedInput, _extends({}, other, {\n    ref: ref => {\n      inputRef(ref ? ref.inputElement : null);\n    },\n    mask: ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n    placeholderChar: '\\u2000'\n  }));\n}\n\nconst Etapa07 = () => {\n  var _contexto$value;\n\n  const _contexto = useContext(EtapaContext);\n\n  const {\n    setValue,\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n\n  const onSubmit = data => {\n    _contexto.value = Object.assign(_contexto.value, data);\n    _contexto.value.etapa = 8;\n\n    _contexto.Atualizar(_contexto.value);\n  };\n\n  useEffect(() => {}, [_contexto, reset]);\n  return __jsx(Container, {\n    className: \"h-full\"\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit)\n  }, __jsx(\"div\", {\n    className: \" grid grid-cols-1 gap-1 justify-items-center\"\n  }, __jsx(\"div\", {\n    className: \"sub-titulo antialiased text-base sm:text-lg md:text-xl lg:text-2xl xl:text-3xl\"\n  }, _contexto.value.nome, \", agora informe seu n\\xFAmero de celular.\"), __jsx(\"div\", {\n    className: \"form  md: w-2/4\"\n  }, __jsx(\"div\", {\n    className: \"w-full flex-col \"\n  }, __jsx(TextField, {\n    placeholder: \"(DD) 99999-9999\",\n    inputRef: register({\n      required: \"Obrigatório.\",\n      pattern: {\n        value: /^(\\(11\\) [9][0-9]{4}-[0-9]{4})|(\\(1[2-9]\\) [5-9][0-9]{3}-[0-9]{4})|(\\([2-9][1-9]\\) [5-9][0-9]{3}-[0-9]{4})$/,\n        message: \"Celular inválido.\"\n      }\n    }),\n    name: \"Celular\",\n    label: \"Celular\",\n    className: \"w-full\",\n    InputProps: {\n      inputComponent: CelularMaskCustom\n    },\n    defaultValue: _contexto === null || _contexto === void 0 ? void 0 : (_contexto$value = _contexto.value) === null || _contexto$value === void 0 ? void 0 : _contexto$value.celular,\n    helperText: errors.celular && errors.celular.message\n  })), __jsx(\"div\", {\n    className: \"avancar_etapa flex justify-end my-4 sm:my-2 md:my-4\"\n  }, __jsx(Button, {\n    variant: \"contained\",\n    className: \"botao\",\n    type: \"submit\"\n  }, \"Avan\\xE7ar\", __jsx(Send, {\n    className: \"ml-4\"\n  })))))));\n};\n\nexport default Etapa07;","map":null,"metadata":{},"sourceType":"module"}