{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PrismaClient } from '@prisma/client';\nimport { EmailService } from '../infra/emails';\nimport { Repository } from '../repositories/repository'; // that class only can be extended\n\nexport class FichaBUS {\n  constructor(_dbClient) {\n    _defineProperty(this, \"_repository\", void 0);\n\n    this._repository = new Repository(_dbClient);\n  }\n\n  async create2(item) {\n    const dbClient = new PrismaClient();\n    return await dbClient.ficha.create({\n      data: item\n    });\n  }\n\n  async create(item) {\n    return new Promise(async (resolve, reject) => {\n      const mail = new EmailService();\n      const dbClient = new PrismaClient();\n      await dbClient.ficha.create({\n        data: item\n      });\n\n      this._repository.FichaREP.create(item).then(data => {\n        console.log('passou');\n        mail.Send({\n          from: \"dursulino@practicar.com.br\",\n          html: \"Funcionou\",\n          subject: \"TMB\",\n          to: \"dursulino@practicar.com.br\"\n        }).then(data => console.log(data)).finally(() => {\n          resolve(item);\n        });\n      }).catch(erro => {\n        console.log(erro);\n        reject(erro);\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/Projetos/TMB/front/solicitacao_credito/src/business/fichaBUS.ts"],"names":["PrismaClient","EmailService","Repository","FichaBUS","constructor","_dbClient","_repository","create2","item","dbClient","ficha","create","data","Promise","resolve","reject","mail","FichaREP","then","console","log","Send","from","html","subject","to","finally","catch","erro"],"mappings":";;AACA,SAAgBA,YAAhB,QAAoC,gBAApC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAIA,SAASC,UAAT,QAA2B,4BAA3B,C,CACA;;AACA,OAAO,MAAMC,QAAN,CAAe;AAGpBC,EAAAA,WAAW,CAACC,SAAD,EAA0B;AAAA;;AACnC,SAAKC,WAAL,GAAmB,IAAIJ,UAAJ,CAAeG,SAAf,CAAnB;AAED;;AACD,QAAME,OAAN,CAAcC,IAAd,EAAyC;AAEvC,UAAMC,QAAQ,GAAG,IAAIT,YAAJ,EAAjB;AACD,WAAO,MAAMS,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsB;AAChCC,MAAAA,IAAI,EAAEJ;AAD0B,KAAtB,CAAb;AAIA;;AACD,QAAMG,MAAN,CAAaH,IAAb,EAAwC;AACtC,WAAO,IAAIK,OAAJ,CAAiB,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AACjD,YAAMC,IAAI,GAAG,IAAIf,YAAJ,EAAb;AACA,YAAMQ,QAAQ,GAAG,IAAIT,YAAJ,EAAjB;AACA,YAAMS,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsB;AAC1BC,QAAAA,IAAI,EAAEJ;AADoB,OAAtB,CAAN;;AAIA,WAAKF,WAAL,CAAiBW,QAAjB,CAA0BN,MAA1B,CAAiCH,IAAjC,EAAuCU,IAAvC,CAA4CN,IAAI,IAAI;AAClDO,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAJ,QAAAA,IAAI,CAACK,IAAL,CAAU;AAAEC,UAAAA,IAAI,EAAE,4BAAR;AAAsCC,UAAAA,IAAI,EAAE,WAA5C;AAAyDC,UAAAA,OAAO,EAAE,KAAlE;AAAyEC,UAAAA,EAAE,EAAE;AAA7E,SAAV,EACGP,IADH,CACQN,IAAI,IAAIO,OAAO,CAACC,GAAR,CAAYR,IAAZ,CADhB,EACmCc,OADnC,CAC2C,MAAM;AAAEZ,UAAAA,OAAO,CAACN,IAAD,CAAP;AAAgB,SADnE;AAID,OAND,EAOGmB,KAPH,CAOSC,IAAI,IAAI;AACbT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACAb,QAAAA,MAAM,CAACa,IAAD,CAAN;AAED,OAXH;AAkBD,KAzBM,CAAP;AA0BD;;AA1CmB","sourcesContent":["\nimport { Ficha, PrismaClient } from '@prisma/client';\nimport { EmailService } from '../infra/emails';\nimport { BaseRepository } from '../repositories/base/baseRepository';\nimport { IRead } from '../repositories/interfaces/IRead';\nimport { IWrite } from '../repositories/interfaces/IWrite';\nimport { Repository } from '../repositories/repository';\n// that class only can be extended\nexport class FichaBUS {\n\n  _repository: Repository;\n  constructor(_dbClient: PrismaClient) {\n    this._repository = new Repository(_dbClient);\n\n  }\n  async create2(item: Ficha): Promise<any> {\n\n    const dbClient = new PrismaClient();\n   return await dbClient.ficha.create({\n      data: item\n    });\n\n  }\n  async create(item: Ficha): Promise<any> {\n    return new Promise<any>(async (resolve, reject) => {\n      const mail = new EmailService();\n      const dbClient = new PrismaClient();\n      await dbClient.ficha.create({\n        data: item\n      });\n\n      this._repository.FichaREP.create(item).then(data => {\n        console.log('passou');\n        mail.Send({ from: \"dursulino@practicar.com.br\", html: \"Funcionou\", subject: \"TMB\", to: \"dursulino@practicar.com.br\" })\n          .then(data => console.log(data)).finally(() => { resolve(item); });\n\n\n      })\n        .catch(erro => {\n          console.log(erro);\n          reject(erro);\n\n        });\n\n\n\n\n\n\n    });\n  }\n\n\n}"]},"metadata":{},"sourceType":"module"}